{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "290659f5_08b10566",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2022-11-23T23:28:51Z",
      "side": 1,
      "message": "One alternative approach to improving execution speed would be to only write history to disk periodically (e.g. every 1 second), instead of upon each new POST code. This would use more disk space, but allow human inspection of the files in case there is any use case for that.",
      "revId": "c9235fc17a15d2bced6bde6ca5aafb36146e4efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "769d1036_b0cbbd6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2022-11-23T23:31:39Z",
      "side": 1,
      "message": "I mean that we could keep the files in JSON format but only write periodically in case there is some interoperability concern with using a binary format.\n\nOr we could do both periodic writes and binary format to really optimize.",
      "parentUuid": "290659f5_08b10566",
      "revId": "c9235fc17a15d2bced6bde6ca5aafb36146e4efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40a4db96_d9e9f010",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-12-01T19:58:22Z",
      "side": 1,
      "message": "As far as I know there is no use case to download the json file as is. Redfish URI is used to retrieve postcode history. This is a good optimization step. We can revisit if the requirements changes.",
      "parentUuid": "769d1036_b0cbbd6e",
      "revId": "c9235fc17a15d2bced6bde6ca5aafb36146e4efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}
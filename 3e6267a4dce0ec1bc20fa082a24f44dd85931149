{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45a6ff4c_df68dd93",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2022-12-16T02:16:38Z",
      "side": 1,
      "message": "I don\u0027t think it is a good solution to add timer logic into savePostCodes function, but to a dedicated one.\nYou could reference the timer callback solution in the dbus-sensers implementation for a sensor data updating.",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afd3cfe2_b45248c7",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-20T09:11:08Z",
      "side": 1,
      "message": "We will survey the timer callback solution in the dbus-sensors",
      "parentUuid": "45a6ff4c_df68dd93",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96226e56_1022c8cf",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-12-15T15:43:13Z",
      "side": 1,
      "message": "Do you want an else branch here to defer the timer for some period of time?  Is that even possible?",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "330eaf7c_c9c51d97",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-19T09:32:11Z",
      "side": 1,
      "message": "We will add an else branch and do some tests",
      "parentUuid": "96226e56_1022c8cf",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c8edcd0_dc090818",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-12-15T15:43:13Z",
      "side": 1,
      "message": "I\u0027m really surprised that it has to be this verbose.  Can we just do `1s` and let the function arguments automatically do the appropriate conversion?  Does that not work for some reason?  If it doesn\u0027t, we should probably improve whatever library that class is coming from.",
      "range": {
        "startLine": 110,
        "startChar": 21,
        "endLine": 111,
        "endChar": 36
      },
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d742e70e_2071ff68",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2022-12-16T02:16:38Z",
      "side": 1,
      "message": "Two points here:\n1. It is not good to hardcode\n2. I don\u0027t think 1s is a reasonable interval, because here is saving into the file, but not memory update.",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb52264_14c3d7fe",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2022-12-16T02:21:50Z",
      "side": 1,
      "message": "Note: I suggest to monitor the memory usage to trigger saving to file, but not the timer interval",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef62582_329d924a",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-19T09:33:11Z",
      "side": 1,
      "message": "We will clean the code and see that it could be built successfully.",
      "parentUuid": "1c8edcd0_dc090818",
      "range": {
        "startLine": 110,
        "startChar": 21,
        "endLine": 111,
        "endChar": 36
      },
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3a4640a_0dcc15db",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-20T09:09:56Z",
      "side": 1,
      "message": "The concept is that if BMC frequently opens and closes post code file, there will be more and more dbus-brokers in BMC,\n\nIn that case, the out-of-memory(OOM) issue may happen.\n\nSo if BMC writes post codes into file one time per second, the OOM issue could be avoided.",
      "parentUuid": "2fb52264_14c3d7fe",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56c051d9_e7574e46",
        "filename": "src/post_code.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2022-12-20T09:12:00Z",
      "side": 1,
      "message": "The concept is that if BMC frequently opens and closes post code file, there will be more and more dbus-brokers in BMC,\n\nIn that case, the out-of-memory(OOM) issue may happen.\n\nSo if BMC writes post codes into file one time per second, the OOM issue could be avoided.",
      "parentUuid": "d742e70e_2071ff68",
      "revId": "3e6267a4dce0ec1bc20fa082a24f44dd85931149",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}